
#pragma once
#ifndef HELPER_H_
#define HELPER_H_

#include <limits> // for std::numeric_limits
#include <string>
#include <iostream>
#include <windows.h>
#include <fstream>
#include <conio.h>

#undef max // because of numeric_limits


using namespace std;



/*
* /brief Function that returns the input by user, if bad input try again
* get_input - template function that returns an input generated by the user
* @param strQuery - strings given
* @return out - returns the input from the user converted to its type
*/
template <typename T> 
T get_input(const string &strQuery)
{
	cout << strQuery << "\n> ";
	T out = T();

	while (!(cin >> out)) {
		cin.clear();
		cin.ignore(numeric_limits <streamsize>::max(), '\n');
		cout << "Error!" "\n";
		cout << strQuery << "\n> ";
	}

	return out;
}

string readLine();

string readPassword(const char *prompt, bool show_asterisk);

void getEnter();
// espera que o utilizador prima ENTER

void ClearScreen();

string ltrim(string& s);
//elimina os espaços inicias de uma string
// @param s - string a ser analisada

string rtrim(string& s);
//elimina os espaços finais de uma string
// @param s - string a ser analisada

bool is_empty(ifstream& pFile);
#endif /* HELPER_H_ */
